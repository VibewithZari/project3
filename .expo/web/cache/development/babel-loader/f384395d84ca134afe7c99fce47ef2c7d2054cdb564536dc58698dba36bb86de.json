{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport QuestionScreen from \"./QuestionScreen\";\nimport ResultScreen from \"./ResultScreen\";\nimport HomeScreen from \"./HomeScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  var questions = [{\n    id: 1,\n    type: 'multipleChoice',\n    image: require(\"./assets/images/paris.jpeg\"),\n    question: 'What is the capital of France?',\n    questionNumber: 'Question 1/4',\n    options: ['Paris', 'Madrid', 'Rome', 'Berlin'],\n    answer: 'Paris',\n    userAnswer: ''\n  }, {\n    id: 2,\n    type: 'textInput',\n    image: require(\"./assets/images/mathematics.jpeg\"),\n    question: 'What is sum of  numbers 5 + 3?',\n    questionNumber: 'Question 2/4',\n    answer: '8',\n    userAnswer: ''\n  }, {\n    id: 3,\n    type: 'dropDown',\n    image: require(\"./assets/images/ocean.jpg\"),\n    question: 'What is the largest ocean in the world?',\n    questionNumber: 'Question 3/4',\n    options: ['Atlantic', 'Indian', 'Arctic', 'Pacific'],\n    answer: 'Pacific',\n    userAnswer: ''\n  }, {\n    id: 4,\n    type: 'survey',\n    image: require(\"./assets/images/exercise.jpg\"),\n    questionNumber: 'Question 4/4',\n    question: 'How much do you enjoy exercising ?',\n    questionDescription: 'On a scale from 1 to 5 where 1 is the highest and 5 is the lowest',\n    options: ['1', '2', '3', '4', '5'],\n    answer: '',\n    userAnswer: ''\n  }];\n  var _useState = useState(Array(questions.length).fill('')),\n    _useState2 = _slicedToArray(_useState, 2),\n    userAnswers = _useState2[0],\n    setUserAnswers = _useState2[1];\n  function handleAnswerChange(index, answer) {\n    var newAnswers = _toConsumableArray(userAnswers);\n    newAnswers[index] = answer;\n    setUserAnswers(newAnswers);\n    console.log(\"user answer\", userAnswers, userAnswers.length, index);\n  }\n  function calculateScore() {\n    var score = 1;\n    questions.forEach(function (question, index) {\n      if (question.answer === userAnswers[index]) {\n        score++;\n      }\n    });\n    return score;\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"QuestionScreen\",\n        children: function children(props) {\n          return _jsx(QuestionScreen, _objectSpread(_objectSpread({}, props), {}, {\n            questions: questions,\n            userAnswers: userAnswers,\n            onAnswerChange: handleAnswerChange\n          }));\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"ResultScreen\",\n        children: function children(props) {\n          return _jsx(ResultScreen, _objectSpread(_objectSpread({}, props), {}, {\n            questions: questions,\n            userAnswers: userAnswers,\n            score: calculateScore()\n          }));\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","NavigationContainer","createStackNavigator","QuestionScreen","ResultScreen","HomeScreen","jsx","_jsx","jsxs","_jsxs","Stack","App","questions","id","type","image","require","question","questionNumber","options","answer","userAnswer","questionDescription","_useState","Array","length","fill","_useState2","_slicedToArray","userAnswers","setUserAnswers","handleAnswerChange","index","newAnswers","_toConsumableArray","console","log","calculateScore","score","forEach","children","Navigator","Screen","name","component","props","_objectSpread","onAnswerChange"],"sources":["/Users/zaric./Project3Repository/project3/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack'\nimport QuestionScreen from './QuestionScreen';\nimport ResultScreen from './ResultScreen';\nimport HomeScreen from './HomeScreen';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const questions = [\n    {\n      id: 1,\n      type: 'multipleChoice',\n      image: require('./assets/images/paris.jpeg'),\n      question: 'What is the capital of France?',\n      questionNumber: 'Question 1/4',\n      options: ['Paris', 'Madrid', 'Rome', 'Berlin'],\n      answer: 'Paris',\n      userAnswer: '',\n    },\n    {\n      id: 2,\n      type: 'textInput',\n      image: require('./assets/images/mathematics.jpeg'),      \n      question: 'What is sum of  numbers 5 + 3?',\n      questionNumber: 'Question 2/4',\n      answer: '8',\n      userAnswer: '',\n    },\n    {\n      id: 3,\n      type: 'dropDown',\n      image: require('./assets/images/ocean.jpg'),\n      question: 'What is the largest ocean in the world?',\n      questionNumber: 'Question 3/4',\n      options: ['Atlantic', 'Indian', 'Arctic', 'Pacific'],\n      answer: 'Pacific',\n      userAnswer: '',\n    },    \n    {\n      id: 4,\n      type: 'survey',\n      image: require('./assets/images/exercise.jpg'),\n      questionNumber: 'Question 4/4',\n      question: 'How much do you enjoy exercising ?',\n      questionDescription: 'On a scale from 1 to 5 where 1 is the highest and 5 is the lowest',\n      options: ['1', '2', '3', '4', '5'],\n      answer: '',\n      userAnswer: '',\n    },\n  ];\n\n  const [userAnswers, setUserAnswers] = useState(Array(questions.length).fill(''));  \n\n  function handleAnswerChange(index, answer) {    \n    const newAnswers = [...userAnswers];\n    newAnswers[index] = answer;\n    setUserAnswers(newAnswers);\n    console.log(\"user answer\",  userAnswers, userAnswers.length, index);\n    // if(index===3){\n    //   navigation.navigate('ResultScreen');\n    // }\n    // setRenderQuestionContent(true)\n  }\n\n  function calculateScore() {\n    let score = 1;\n    questions.forEach((question, index) => {\n      if (question.answer === userAnswers[index]) {\n        score++;\n      }\n    });\n    return score;\n  }\n\n  return (\n   \n    <NavigationContainer>\n      <Stack.Navigator>\n      <Stack.Screen\n          name=\"Home\"\n          component={HomeScreen}\n          //options={{title: 'Welcome'}}\n        />\n      <Stack.Screen name=\"QuestionScreen\">\n           {(props) => (\n             <QuestionScreen\n               {...props}\n               questions={questions}\n               userAnswers={userAnswers}               \n               onAnswerChange={handleAnswerChange}\n             />\n           )}\n         </Stack.Screen>\n          <Stack.Screen name=\"ResultScreen\">\n           {(props) => (\n             <ResultScreen\n               {...props}\n               questions={questions}\n               userAnswers={userAnswers}\n               score={calculateScore()}\n             />\n           )}\n         </Stack.Screen> \n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,cAAc;AACrB,OAAOC,YAAY;AACnB,OAAOC,UAAU;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtC,IAAMC,KAAK,GAAGR,oBAAoB,EAAE;AAEpC,eAAe,SAASS,GAAGA,CAAA,EAAG;EAC5B,IAAMC,SAAS,GAAG,CAChB;IACEC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,gBAAgB;IACtBC,KAAK,EAAEC,OAAO,8BAA8B;IAC5CC,QAAQ,EAAE,gCAAgC;IAC1CC,cAAc,EAAE,cAAc;IAC9BC,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC;IAC9CC,MAAM,EAAE,OAAO;IACfC,UAAU,EAAE;EACd,CAAC,EACD;IACER,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,WAAW;IACjBC,KAAK,EAAEC,OAAO,oCAAoC;IAClDC,QAAQ,EAAE,gCAAgC;IAC1CC,cAAc,EAAE,cAAc;IAC9BE,MAAM,EAAE,GAAG;IACXC,UAAU,EAAE;EACd,CAAC,EACD;IACER,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,UAAU;IAChBC,KAAK,EAAEC,OAAO,6BAA6B;IAC3CC,QAAQ,EAAE,yCAAyC;IACnDC,cAAc,EAAE,cAAc;IAC9BC,OAAO,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC;IACpDC,MAAM,EAAE,SAAS;IACjBC,UAAU,EAAE;EACd,CAAC,EACD;IACER,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAEC,OAAO,gCAAgC;IAC9CE,cAAc,EAAE,cAAc;IAC9BD,QAAQ,EAAE,oCAAoC;IAC9CK,mBAAmB,EAAE,mEAAmE;IACxFH,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAClCC,MAAM,EAAE,EAAE;IACVC,UAAU,EAAE;EACd,CAAC,CACF;EAED,IAAAE,SAAA,GAAsCvB,QAAQ,CAACwB,KAAK,CAACZ,SAAS,CAACa,MAAM,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAL,SAAA;IAAzEM,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAElC,SAASI,kBAAkBA,CAACC,KAAK,EAAEZ,MAAM,EAAE;IACzC,IAAMa,UAAU,GAAAC,kBAAA,CAAOL,WAAW,CAAC;IACnCI,UAAU,CAACD,KAAK,CAAC,GAAGZ,MAAM;IAC1BU,cAAc,CAACG,UAAU,CAAC;IAC1BE,OAAO,CAACC,GAAG,CAAC,aAAa,EAAGP,WAAW,EAAEA,WAAW,CAACJ,MAAM,EAAEO,KAAK,CAAC;EAKrE;EAEA,SAASK,cAAcA,CAAA,EAAG;IACxB,IAAIC,KAAK,GAAG,CAAC;IACb1B,SAAS,CAAC2B,OAAO,CAAC,UAACtB,QAAQ,EAAEe,KAAK,EAAK;MACrC,IAAIf,QAAQ,CAACG,MAAM,KAAKS,WAAW,CAACG,KAAK,CAAC,EAAE;QAC1CM,KAAK,EAAE;MACT;IACF,CAAC,CAAC;IACF,OAAOA,KAAK;EACd;EAEA,OAEE/B,IAAA,CAACN,mBAAmB;IAAAuC,QAAA,EAClB/B,KAAA,CAACC,KAAK,CAAC+B,SAAS;MAAAD,QAAA,GAChBjC,IAAA,CAACG,KAAK,CAACgC,MAAM;QACTC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAEvC;MAAW,EAEtB,EACJE,IAAA,CAACG,KAAK,CAACgC,MAAM;QAACC,IAAI,EAAC,gBAAgB;QAAAH,QAAA,EAC7B,SAAAA,SAACK,KAAK;UAAA,OACLtC,IAAA,CAACJ,cAAc,EAAA2C,aAAA,CAAAA,aAAA,KACTD,KAAK;YACTjC,SAAS,EAAEA,SAAU;YACrBiB,WAAW,EAAEA,WAAY;YACzBkB,cAAc,EAAEhB;UAAmB,GACnC;QAAA;MACH,EACY,EACdxB,IAAA,CAACG,KAAK,CAACgC,MAAM;QAACC,IAAI,EAAC,cAAc;QAAAH,QAAA,EAC/B,SAAAA,SAACK,KAAK;UAAA,OACLtC,IAAA,CAACH,YAAY,EAAA0C,aAAA,CAAAA,aAAA,KACPD,KAAK;YACTjC,SAAS,EAAEA,SAAU;YACrBiB,WAAW,EAAEA,WAAY;YACzBS,KAAK,EAAED,cAAc;UAAG,GACxB;QAAA;MACH,EACY;IAAA;EACA,EACE;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}